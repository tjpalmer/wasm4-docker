FROM docker.io/ubuntu

RUN apt-get update

# # Official requirements for dotnet.
# RUN apk add \
#     bash icu-libs krb5-libs libgcc libintl libssl1.1 libstdc++ wget zlib

# # RUN wget https://dot.net/v1/dotnet-install.sh && \
# #     bash ./dotnet-install.sh -c Current
# # RUN ln -s /root/.dotnet/dotnet /usr/bin/

# # Add requirements for building things.
# RUN apk add clang cmake git make python3
RUN apt-get install -y curl git make

ARG DEBIAN_FRONTEND=noninteractive
ENV TZ=Etc/UTC
RUN apt-get install -y tzdata

# # Also needed for crystal and/or others.
# RUN apk add g++ llvm-dev
# RUN apk add crystal shards
RUN curl -fsSL https://crystal-lang.org/install.sh | bash

RUN apt-get install -y g++ llvm-dev

WORKDIR /work

# Build crystal with wasm support.
# See: https://github.com/lbguilherme/crystal-web
RUN git clone -b feat/webassembly --depth 1 \
    https://github.com/lbguilherme/crystal.git
RUN cd crystal && make || true

# Get wasi-sdk.
RUN wget https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-14/wasi-sdk-14.0-linux.tar.gz
RUN tar -xf wasi-sdk-14.0-linux.tar.gz
ENV WASI_SDK_PATH=/work/wasi-sdk-14.0
ENV PATH="${WASI_SDK_PATH}/bin:${PATH}"

# Get other requirements.
RUN wget https://github.com/lbguilherme/crystal/files/7791111/libpcre-8.45.tar.gz
RUN tar -xf libpcre-8.45.tar.gz

# Binaryen.
RUN wget https://github.com/WebAssembly/binaryen/releases/download/version_104/binaryen-version_104-x86_64-linux.tar.gz
RUN tar -xf binaryen-version_104-x86_64-linux.tar.gz

# Build empty wasm for demo.
RUN touch main.cr && \
    crystal/bin/crystal build --release main.cr --cross-compile --target wasm32-unknown-wasi && \
    wasm-ld main.wasm -o main-final.wasm ./wasi-sdk-14.0/share/wasi-sysroot/lib/wasm32-wasi/libc.a ./wasi-sdk-14.0/lib/clang/13.0.0/lib/wasi/libclang_rt.builtins-wasm32.a libpcre.a --import-undefined --no-entry --export __original_main --strip-all --compress-relocations && \
    binaryen-version_104/bin/wasm-opt main-final.wasm -o main-opt.wasm -O3 --converge && \
    ls -l
